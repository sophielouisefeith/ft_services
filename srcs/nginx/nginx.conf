# This configuration file filters the incoming requests and redirects them.
# A redirection is a way to sent both user and serach engines to a different
# URL from the one they orginally requested.
# Port 80 = HTTP = non SSL, with redirection type 301 ("Moved Permanently") to port 443.
# Port 443 = HTTPS = with SSL, so a redirection from HTTP to HTTPS is established.
# Error 497 is a http request to a https listener, when this happen I show a redirected website.

# When you are in the minikube-dashboard -> nginx -> nginx-service, there are three URL's;
# If you click on the first URL, and then enter 'thisisunsafe' (in Chrome) it will show you
# a redirected page
# If you enter /wordpress after the second URL it redirects you to wordpress,
# if you enter /phpmyadmin after the second URL it redirects you to phpmyadmin 
# by using a reversed proxy.
# The third URL is a redirection to port 22 (SSL port), which gives a 'page not found', which is fine.

user							www;
worker_processes				auto;
error_log						/var/log/nginx/error.log warn;

events {
	worker_connections			1024;
}

http {
	include						/etc/nginx/mime.types;
	default_type				application/octet-stream;
	sendfile					on;
	access_log					/var/log/nginx/access.log;
	keepalive_timeout			3000;
	upstream backend {
		server					phpmyadmin:5000;
	}
	server {
		listen 				   80 default_server;
     	listen 				   [::]:80 default_server;
		server_name				_;
		return					301 https://$host$request_uri;
	}
	server {
		listen  	        	443 ssl;
		listen      	    	[::]:443 ssl;
		root					/www;
		ssl_certificate			/etc/ssl/nginx.crt;
		ssl_certificate_key		/etc/ssl/nginx.key;
		index					index.html index.htm;
		server_name				_;
		client_max_body_size	32m;
		error_page              500 502 503 504  /50x.html;
		error_page				497 https://$host$request_uri;
		location = /50x.html {
			root				/var/lib/nginx/html;
		}
		location /wordpress {
			return				307 http://$host:5050;
		}
		location /phpmyadmin/ {
			proxy_pass			http://$host:5000;
			proxy_redirect		off;
			proxy_set_header	Host $host;
			proxy_set_header	X-Real-IP $remote_addr;
			proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header	X-Forwarded-Host $server_name;
			proxy_set_header	X-Forwarded-Proto https;
		}
	}
}
